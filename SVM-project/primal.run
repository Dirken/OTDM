reset;

cd('C:/Users/Meyerhofer/Desktop/UNI/OTDM/SVM-project/');
model 'primal.mod';
data 'data.dat';
#display nu;

option solver "ampl_mswin64/cplex";
solve;

#display w;
#display s;
#display gamma;


display w > 'output/primal/w.txt';
display s > 'output/primal/s.txt';
display gamma > 'output/primal/gamma.txt';


var results {i in 1..numPoints} = if (sum {j in 1..numVars} w[j] * x[i,j] + gamma >= 0) then 1 else -1;

var correct;
for{k in 1..numPoints} {
	if results[k] == y[k] then
		{ let correct := correct + 1;}
}

#display results;
display correct/numPoints;

display correct/numPoints > 'output/primal/acc_train.txt';

#validation, we use same w's and gamma. we change x,y's

param numPoints_test = 200;    


var test{m in 1..numPoints_test, n in 1..dimensions};
var x_test{m in 1..numPoints_test, n in 1..numVars};
var y_test{m in 1..numPoints_test};

read {m in 1..numPoints_test, n in 1..dimensions} test[m,n] < "data/train200-seed12345.dat";

for{i in 1..numPoints_test} {
	for{j in 1..numVars} {
		let x_test[i,j] := test[i,j];	
	}
	let y_test[i] := test[i,numVars+1];
} 

var results_test {i in 1..numPoints_test} = if (sum {j in 1..numVars} w[j] * x_test[i,j] + gamma >= 0) then 1 else -1;

var correct_test;
for{k in 1..numPoints_test} {
	if results_test[k] == y_test[k] then
		{ let correct_test := correct_test + 1;}
}


#display results_test;
display correct_test/numPoints_test > 'output/primal/acc_test.txt';
#display correct_test/numPoints_test;